# filtering out species with low n of observations
index_method_subset_23 <- index_method_23 %>%
filter(!druh %in% removed_species_list_23$druh)
index_substrate_subset_23 <-index_substrate_23 %>%
filter(!druh %in% removed_species_list_23$druh)
# combining datasets into 1
index_23<- bind_cols(index_method_23, index_substrate_23) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
index_subset_23<- bind_cols(index_method_subset_23, index_substrate_subset_23) %>%  #do jednoho df
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
par(mar = c(5, 5, 5, 5))
plot(BaS ~ BaM, xlim = c(0.3, 1), ylim = c(0.3, 1), ylab="Substrate specialization 2023",xlab="Method specialization 2023", data=index_subset_23, cex.lab=2, pch=19)
abline(lm(BaS ~ BaM, index_subset_23), lw=1.3)
abline(c(0,1), lty=2, col="red")
summary(lm(BaS ~ BaM, index_subset_23))
################### Calculating index for year 2024 #################
index_substrate_24 <- calculate_index(behav_substrate_24, substrate, n_categories = 5 )
index_method_24 <- calculate_index(behav_substrate_24, behav, n_categories = 6 )
# filtering out species with low n of observations
index_method_subset_24 <- index_method_24 %>%
filter(!druh %in% removed_species_list_24$druh)
index_substrate_subset_24 <-index_substrate_24 %>%
filter(!druh %in% removed_species_list_24$druh)
# combining datasets into 1 and renaming new columns
index_24<- bind_cols(index_method_24, index_substrate_24) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
index_subset_24<- bind_cols(index_method_subset_24, index_substrate_subset_24) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
par(mar = c(5, 5, 5, 5))
plot(BaS ~ BaM, xlim = c(0.3, 1), ylim = c(0.3, 1), ylab="Substrate specialization 2024",xlab="Method specialization 2024", data=index_subset_24, cex.lab=2, pch=19)
abline(lm(BaS ~ BaM, index_subset_24), lw=1.3)
abline(c(0,1), lty=2, col="red")
summary(lm(BaS ~ BaM, index_subset_24))
scatter_24<-par(mar = c(5, 5, 5, 5))%>%
plot(BaS ~ BaM, xlim = c(0.3, 1), ylim = c(0.3, 1), ylab="Substrate specialization 2024",xlab="Method specialization 2024", data=index_subset_24, cex.lab=2, pch=19)%>%
abline(lm(BaS ~ BaM, index_subset_24), lw=1.3)%>%
abline(c(0,1), lty=2, col="red")
par(mar = c(5, 5, 5, 5))+
plot(BaS ~ BaM, xlim = c(0.3, 1), ylim = c(0.3, 1), ylab="Substrate specialization 2024",xlab="Method specialization 2024", data=index_subset_24, cex.lab=2, pch=19)+
abline(lm(BaS ~ BaM, index_subset_24), lw=1.3)+
abline(c(0,1), lty=2, col="red")
specialization_24 <- ggplot(index_subset_24, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +  # This matches 'pch=19' and increases point size slightly
labs(x = "Method specialization 2024", y = "Substrate specialization 2024") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_smooth(method = "lm", color = "black", se = FALSE, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
plot(specialization_24)
specialization_24 <- ggplot(index_subset_24, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +  # This matches 'pch=19' and increases point size slightly
labs(x = "Method specialization 2024", y = "Substrate specialization 2024") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_smooth(method = "lm", color = "black", se = TRUE, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
plot(specialization_24)
View(index_subset_24)
specialization_24 <- ggplot(index_subset_24, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +  # This matches 'pch=19' and increases point size slightly
labs(x = "Method specialization 2024", y = "Substrate specialization 2024") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_text(aes(label = druh), vjust = -0.5, hjust = 0.5, size = 3) +  # Add species labels
geom_smooth(method = "lm", color = "black", se = F, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
plot(specialization_24)
specialization_23 <- ggplot(index_subset_23, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +
labs(x = "Method specialization 2023", y = "Substrate specialization 2023") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_text(aes(label = druh), vjust = -0.5, hjust = 0.5, size = 3) +  # Add species labels
geom_smooth(method = "lm", color = "black", se = F, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
grid.arrange(specialization_24, specialization_23, ncol=2, nrow=1)
plot(specialization_24)
plot(specialization_23)
View(index_substrate_subset_24)
View(index_subset_24)
View(index_subset_23)
summary(lm(BaS ~ BaM, index_subset_24))
View(data_behav_23)
View(data_behav_24)
View(data_substrate_24)
8*12
*2
96*2
6*12
72*2
index_method_24 <- calculate_index(behav_substrate_24, behav, n_categories = 7 )
# filtering out species with low n of observations
index_method_subset_24 <- index_method_24 %>%
filter(!druh %in% removed_species_list_24$druh)
index_substrate_subset_24 <-index_substrate_24 %>%
filter(!druh %in% removed_species_list_24$druh)
# combining datasets into 1 and renaming new columns
index_24<- bind_cols(index_method_24, index_substrate_24) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
index_subset_24<- bind_cols(index_method_subset_24, index_substrate_subset_24) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
specialization_24 <- ggplot(index_subset_24, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +  # This matches 'pch=19' and increases point size slightly
labs(x = "Method specialization 2024", y = "Substrate specialization 2024") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_text(aes(label = druh), vjust = -0.5, hjust = 0.5, size = 3) +  # Add species labels
geom_smooth(method = "lm", color = "black", se = F, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
plot(specialization_24)
summary(lm(BaS ~ BaM, index_subset_24))
################### Calculating index for full dataset #################
index_substrate_all <- calculate_index(behav_substrate_all, substrate, n_categories = 5 )
index_method_all <- calculate_index(behav_substrate_all, behav, n_categories = 7 )
# filtering out species with low n of observations
index_method_subset_all <- index_method_all %>%
filter(!druh %in% removed_species_list_all$druh)
index_substrate_subset_all <-index_substrate_all %>%
filter(!druh %in% removed_species_list_all$druh)
# combining datasets into 1 and renaming new columns
index_all<- bind_cols(index_method_all, index_substrate_all) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
index_subset_all<- bind_cols(index_method_subset_all, index_substrate_subset_all) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
################### Calculating index for full dataset #################
index_substrate_all <- calculate_index(behav_substrate_all, substrate, n_categories = 5 )
index_method_all <- calculate_index(behav_substrate_all, behav, n_categories = 7 )
# filtering out species with low n of observations
index_method_subset_all <- index_method_all %>%
filter(!druh %in% removed_species_list_all$druh)
index_substrate_subset_all <-index_substrate_all %>%
filter(!druh %in% removed_species_list_all$druh)
# combining datasets into 1 and renaming new columns
index_all<- bind_cols(index_method_all, index_substrate_all) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
index_subset_all<- bind_cols(index_method_subset_all, index_substrate_subset_all) %>%
select(druh...1, B...2, Ba...3, B...5, Ba...6) %>%
rename(druh = druh...1, BM=B...2,BaM=Ba...3, BS=B...5, BaS=Ba...6)
specialization_full <- ggplot(index_subset_all, aes(x = BaM, y = BaS)) +
geom_point(size = 3) +  # This matches 'pch=19' and increases point size slightly
labs(x = "Method specialization", y = "Substrate specialization") +
xlim(0.3, 1) +
ylim(0.3, 1) +
geom_text(aes(label = druh), vjust = -0.5, hjust = 0.5, size = 3) +  # Add species labels
geom_smooth(method = "lm", color = "black", se = F, size = 1.3) +  # Line of best fit
geom_abline(intercept = 0, slope = 1, linetype = "dashed", color = "red") +  # Diagonal reference line
theme_classic() +
theme(
axis.title = element_text(size = 16)  # Matches 'cex.lab=2' for axis labels
)
plot(specialization_full)
dist_mat<-behav_substrate_all %>%
filter(!druh %in% removed_species_list_all$druh)%>%
group_by(druh) %>%
count(druh,behav,substrate, sort=TRUE)%>%
unite(col = "behav_substrate", behav, substrate, sep = "-", remove = TRUE) %>%
pivot_wider(names_from="behav_substrate",values_from="n")%>%
replace(is.na(.), 0)%>%
remove_rownames%>%
column_to_rownames(var="druh")
list_obs_all<-behav_substrate_all %>% count(druh, sort=T)
rm_sp_all <- list_obs_all %>%
filter(n<=5)
dist_mat_best <- dist_mat[!(dist_mat$druh=="Certhia_brachydactyla"|dist_mat$druh=="Dryocoptes_martius"| dist_mat$druh=="Phoenicorus_phoenicorus"| dist_mat$druh=="Dendrocopos_major"| dist_mat$druh=="Dendrocopos_medius"| dist_mat$druh=="Turdus_viscivorus"),] %>%
remove_rownames%>%
column_to_rownames(var="druh")
dist_mat_best <- dist_mat[!(dist_mat$druh=="Certhia_brachydactyla"|dist_mat$druh=="Dryocoptes_martius"| dist_mat$druh=="Phoenicorus_phoenicorus"| dist_mat$druh=="Dendrocopos_major"| dist_mat$druh=="Dendrocopos_medius"| dist_mat$druh=="Turdus_viscivorus"),] %>%
remove_rownames%>%
column_to_rownames(var="druh")
View(dist_mat)
dist_mat_best <- dist_mat%>%
remove_rownames%>%
column_to_rownames(var="druh")
dist_mat_best <- dist_mat
distance_all <- vegdist(dist_mat_best, method = "bray",na.rm=TRUE)#bray-curtis distance
distance_all <- as.matrix(vzdalenost)
distance_all <- as.dist(vzdalenost[order(rownames(vzdalenost)),order(colnames(vzdalenost))])
distance_all <- vegdist(dist_mat_best, method = "bray",na.rm=TRUE)#bray-curtis distance
distance_all <- as.matrix(distance_all)
distance_all <- as.dist(distance_all[order(rownames(vzdalenost)),order(colnames(vzdalenost))])
distance_all <- as.dist(distance_all[order(rownames(distance_all)),order(colnames(distance_all))])
View(index_subset_all)
druhy_full<-as.data.frame(unique(index_subset_all$druh))
library("writexl")
write_xlsx(druhy,"druhy.xlsx")
druhy_full<-as.data.frame(unique(index_subset_all$druh))
library("writexl")
write_xlsx(druhy_full,"druhy.xlsx")
phylo_data <- "./resources/output_22sp.nex"
phylo_data<-ape::read.nexus(phylo_data)
View(phylo_data)
phylo_data[["tree_2517"]][["tip.label"]]
sp_phylo_names<-phylo_data[["tree_2517"]][["tip.label"]]
sp_phylo_names<-as.data.frame(phylo_data[["tree_2517"]][["tip.label"]])
View(sp_phylo_names)
View(druhy_full)
View(druhy_full)
phylo_data <- "./resources/output_22sp.nex"
phylo_data<-ape::read.nexus(phylo_data)
### Selecting best tree
ape::plot.phylo(phylo_data[[92]])
View(phylo_data)
phylo_data <- "./resources/output_22sp.nex"
phylo_data<-ape::read.nexus(phylo_data)
### Selecting best tree
ape::plot.phylo(phylo_data[[92]])
phylo_best<-phylo_data[[1]]
### alphabetic sorting
phylo_best <- dist(cophenetic(phylo_best))
phylo_best <- as.matrix(phylo_best)
phylo_best <- as.dist(phylo_best[order(rownames(phylo_best)),order(colnames(phylo_best))])
###### behavior-substrate dendro
dendro <- distance_all %>%
hclust (method="ward.D2") %>%
as.dendrogram()
##### phylogeny dendro
detach(package:ape, unload=T)
dendro_phylo_best <- phylo_data[[1]] %>%
as.dendrogram()%>%
dendextend::rotate(c(1:6,7:18))
dendro_phylo_best<-rotate(dendro_phylo_best, c(1:6,7:18))
dendro_phylo_best <- phylo_data[[1]] %>%
as.dendrogram()
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny", rotate(as.character(1:7)))
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny")
par(mar=c(3,1,1,12))
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny")
plot(dendro,horiz=T, main="dendro behav_substrate", )
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
rotate_tangle <- untangle_step_rotate_1side(
dendro_phylo_best,
dendro,
L = 1.5,
direction = c("forward", "backward"),
k_seq = NULL,
dend_heights_per_k,
leaves_matching_method = c("labels", "order"))
plot(rotate_tangle)
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=TRUE,
margin_inner=14,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=10,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=8,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
##### phylogeny dendro
detach(package:ape, unload=T)
dendro_phylo_best <- phylo_data[[5]] %>%
as.dendrogram()
dendextend::rotate(c(1:6,7:18))
dendro_phylo_best<-rotate(dendro_phylo_best, c(1:6,7:18))
dendro_phylo_best
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny")
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=8,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
########################## trying Rtapas ################################
library(Rtapas)
?Rtapas
tangle_gram(dendro, dendro_phylo_best, np_matrix, NPc, colscale = "sequential",
colgrad = c("darkorchid4", "gold"), nbreaks = 50, node.tag = TRUE,
cexpt = 1.2, link.lwd = 1, link.lty = 1, fsize = 0.75, pts = FALSE,
ftype ="i")
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
common_subtrees_color_branches= TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=8,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
######################### aesthetics ####################################################################
op = par(bg = "white")
# vector of colors
labelColors_2 = c("#7A67EE", "#008B45", "#036564","#D46B37" )
labelLegend = c("probers", "leaf", "air", "ground")
# nařezat dendro do 4 gild
clusMember = cutree(dendro, 4)
# funkce pro obarvení gild
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors_2[clusMember[which(names(clusMember) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
# dendrapply aplikace funkce pro guildy
dendro_pretty = dendrapply(dendro, colLab)
dendro_fine_pretty = dendrapply(dendro_fine, colLab)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
tanglegram(dendro_pretty, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F,)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
View(dist_mat)
# vector of colors
labelColors_2 = c("#7A67EE", "#008B45", "#036564","#D46B37" )
labelLegend = c("air?", "probers", "leaf", "bark")
# nařezat dendro do 4 gild
clusMember = cutree(dendro, 4)
# funkce pro obarvení gild
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors_2[clusMember[which(names(clusMember) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
# dendrapply aplikace funkce pro guildy
dendro_pretty = dendrapply(dendro, colLab)
dendro_fine_pretty = dendrapply(dendro_fine, colLab)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
######################### aesthetics ####################################################################
op = par(bg = "white")
# vector of colors
labelColors_2 = c("#7A67EE", "#008B45", "#036564","#D46B37" )
labelLegend = c("air?", "probers", "leaf", "bark")
# nařezat dendro do 4 gild
clusMember = cutree(dendro, 4)
# funkce pro obarvení gild
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors_2[clusMember[which(names(clusMember) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
# dendrapply aplikace funkce pro guildy
dendro_pretty = dendrapply(dendro, colLab)
dendro_fine_pretty = dendrapply(dendro_fine, colLab)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
tanglegram(dendro_pretty, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F,)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
par(mar=c(2,1,1,12))
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
tanglegram(dendro_pretty, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F,)
tanglegram(dendro_pretty, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F,)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
par(mar=c(2,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
