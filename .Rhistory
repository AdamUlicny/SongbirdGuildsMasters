replace(is.na(.), 0)%>%
remove_rownames%>%
column_to_rownames(var="druh")
dist_mat<-behav_substrate_all %>%
filter(!druh %in% removed_species_list_all$druh)%>%
group_by(druh) %>%
count(druh,behav,substrate, sort=TRUE)%>%
unite(col = "behav_substrate", behav, substrate, sep = "-", remove = TRUE) %>%
pivot_wider(names_from="behav_substrate",values_from="n")%>%
replace(is.na(.), 0)%>%
remove_rownames%>%
column_to_rownames(var="druh")
#################### Literature ################################################
dist_mat_lit_behav <- data_lit_behav%>%
mutate(across(where(is.numeric), round, 0))%>%
replace(is.na(.), 0)%>%
group_by(species_orig, behav)%>%
summarise(x=sum(x))%>%
pivot_wider(names_from="behav", values_from="x")%>%
remove_rownames%>%
column_to_rownames(var="species_orig")
dist_mat_lit_substrate <- data_lit_substrate%>%
mutate(across(where(is.numeric), round, 0))%>%
replace(is.na(.), 0)%>%
group_by(species_orig, substrate)%>%
summarise(x=sum(x))%>%
pivot_wider(names_from="substrate", values_from="x")%>%
remove_rownames%>%
column_to_rownames(var="species_orig")
###################### Calculating Distance Matrix #############################
# behav-substrate combination distance matrix for 2 season dataset
distance_all <- vegdist(dist_mat_best, method = "bray",na.rm=TRUE)#bray-curtis distance
distance_all <- as.matrix(distance_all)
distance_all <- as.dist(distance_all[order(rownames(distance_all)),order(colnames(distance_all))])
# behav-substrate combination distance matrix for 2 season dataset
distance_all <- vegdist(dist_mat_best, method = "bray",na.rm=TRUE)#bray-curtis distance
distance_all <- as.matrix(distance_all)
distance_all <- as.dist(distance_all[order(rownames(distance_all)),order(colnames(distance_all))])
# behav-substrate combination distance matrix for 2 season dataset
distance_all <- vegdist(dist_mat, method = "bray",na.rm=TRUE)#bray-curtis distance
distance_all <- as.matrix(distance_all)
distance_all <- as.dist(distance_all[order(rownames(distance_all)),order(colnames(distance_all))])
dist_lit_behav <- vegdist(dist_mat_lit_behav, method = "bray",na.rm=TRUE)
dist_lit_behav <- as.matrix(dist_lit_behav)
dist_lit_behav <- as.dist(dist_lit_behav[order(rownames(dist_lit_behav)),order(colnames(dist_lit_behav))])
dist_lit_substrate <-vegdist(dist_mat_lit_substrate, method = "bray",na.rm=TRUE)
dist_lit_substrate <- as.matrix(dist_lit_substrate)
dist_lit_substrate <- as.dist(dist_lit_substrate[order(rownames(dist_lit_substrate)),order(colnames(dist_lit_substrate))])
#################### Morpho data ###############################################
data_morfo <- read_xlsx("./data/morfo_data.xlsx")
### drop unused columns
data_morfo_matrix <- data_morfo %>%
select(species_birdlife,Beak.Length_Culmen, Beak.Width,
Beak.Depth,Tarsus.Length, Wing.Length, `Hand-Wing.Index`, Tail.Length)
### log transform data
data_morfo_matrix_log <- data_morfo_matrix%>%
mutate_at(2:8, log)%>%
remove_rownames%>%
column_to_rownames(var="species_birdlife")
### distance matrix
dist_morfo<-vegdist(data_morfo_matrix_log, method="euclidean")
## alphabetical sorting
dist_morfo <- as.matrix(dist_morfo)
dist_morfo <- as.dist(dist_morfo[order(rownames(dist_morfo)),order(colnames(dist_morfo))])
## cluster
dendro_morfo<-dist_morfo %>%
hclust(method="ward.D2")%>%
as.dendrogram()
druhy_full<-as.data.frame(unique(index_subset_all$druh))
library("writexl")
write_xlsx(druhy_full,"druhy.xlsx")
phylo_data <- "./resources/output_22sp.nex"
phylo_data<-ape::read.nexus(phylo_data)
### Selecting best tree
ape::plot.phylo(phylo_data[[28]])
phylo_best<-phylo_data[[28]]
### alphabetic sorting
phylo_best <- dist(cophenetic(phylo_best))
phylo_best <- as.matrix(phylo_best)
phylo_best <- as.dist(phylo_best[order(rownames(phylo_best)),order(colnames(phylo_best))])
################ Mantel test ###################################################
simple.results.mantel <- mantel(xdis = distance_all, ydis = dist_morfo, method = "pearson", permutations = 999)
simple.results.mantel
plot(vzdalenost, dist_morfo)
dist_phylo_mantel <- mantel(xdis=vzdalenost, ydis=phylo_best, method="pearson", permutations=999)
dist_phylo_mantel
plot(vzdalenost, phylo_best)
###### behavior-substrate dendro
dendro <- distance_all %>%
hclust (method="ward.D2") %>%
as.dendrogram()
###### behavior-fine substrate dendro
dendro_fine <- vzdalenost_fine %>%
hclust (method="ward.D2") %>%
as.dendrogram()
#### literature dendro behav
dendro_lit_behav<-dist_lit_behav %>%
hclust(method="ward.D2")%>%
as.dendrogram()
dendro_lit_substrate<-dist_lit_substrate %>%
hclust(method="ward.D2")%>%
as.dendrogram()
##### phylogeny dendro
detach(package:ape, unload=T)
dendro_phylo_best <- phylo_data[[22]] %>%
as.dendrogram()
dendextend::rotate(c(1:6,7:18))
dendro_phylo_best<-rotate(dendro_phylo_best, c(1:6,7:18))
dendro_phylo_best
par(mar=c(3,1,1,12))
plot(dendro,horiz=T, main="dendro behav_substrate", )
plot(as.dendrogram(dendro_fine),horiz=T, main = "dendro behav_substrate_fine")
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny")
par(mar=c(2,1,1,12))
plot(as.dendrogram(dendro_lit_behav),horiz=T, main = "literature_behav")
plot(as.dendrogram(dendro_lit_substrate),horiz=T, main = "literature_substrate")
tanglegram(dendro, dendro_fine,
common_subtrees_color_lines = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
sort=T,
main_left="dendro",
main_right="dendro_fine")
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
common_subtrees_color_branches= TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=8,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
rotate_tangle <- untangle_step_rotate_1side(
dendro_phylo_best,
dendro,
L = 1.5,
direction = c("forward", "backward"),
k_seq = NULL,
dend_heights_per_k,
leaves_matching_method = c("labels", "order"))
plot(rotate_tangle)
tangle_morfo_behav <- tanglegram(dendro_morfo, dendro,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
main_left="morphology",
main_right="behavior",
hang=F,)
tangle_morfo_phylo <- tanglegram(dendro_morfo, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
main_left="morphology",
main_right="phylogeny",
hang=F,)
######################### Codendrogram Aesthetics ###########################################
op = par(bg = "white")
# vector of colors
labelColors_2 = c("#7A67EE", "#008B45", "#036564","#D46B37", "#D43B22")
labelLegend = c("air?", "probers", "leaf", "bark","ground")
# nařezat dendro do 4 gild
clusMember = cutree(dendro, 5)
# funkce pro obarvení gild
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors_2[clusMember[which(names(clusMember) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
# dendrapply aplikace funkce pro guildy
dendro_pretty = dendrapply(dendro, colLab)
dendro_fine_pretty = dendrapply(dendro_fine, colLab)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
### kombo gildy_phylo estetika
dev.off()
set.seed(12345)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=1000)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
druhy_full<-as.data.frame(unique(index_subset_all$druh))
library("writexl")
write_xlsx(druhy_full,"druhy.xlsx")
phylo_data <- "./resources/output_20sp.nex"
phylo_data<-ape::read.nexus(phylo_data)
### Selecting best tree
ape::plot.phylo(phylo_data[[28]])
phylo_best<-phylo_data[[28]]
### alphabetic sorting
phylo_best <- dist(cophenetic(phylo_best))
phylo_best <- as.matrix(phylo_best)
phylo_best <- as.dist(phylo_best[order(rownames(phylo_best)),order(colnames(phylo_best))])
################ Mantel test ###################################################
simple.results.mantel <- mantel(xdis = distance_all, ydis = dist_morfo, method = "pearson", permutations = 999)
simple.results.mantel
plot(vzdalenost, dist_morfo)
dist_phylo_mantel <- mantel(xdis=vzdalenost, ydis=phylo_best, method="pearson", permutations=999)
dist_phylo_mantel
plot(vzdalenost, phylo_best)
###### behavior-substrate dendro
dendro <- distance_all %>%
hclust (method="ward.D2") %>%
as.dendrogram()
###### behavior-fine substrate dendro
dendro_fine <- vzdalenost_fine %>%
hclust (method="ward.D2") %>%
as.dendrogram()
#### literature dendro behav
dendro_lit_behav<-dist_lit_behav %>%
hclust(method="ward.D2")%>%
as.dendrogram()
dendro_lit_substrate<-dist_lit_substrate %>%
hclust(method="ward.D2")%>%
as.dendrogram()
##### phylogeny dendro
detach(package:ape, unload=T)
dendro_phylo_best <- phylo_data[[22]] %>%
as.dendrogram()
dendextend::rotate(c(1:6,7:18))
dendro_phylo_best<-rotate(dendro_phylo_best, c(1:6,7:18))
dendro_phylo_best
par(mar=c(3,1,1,12))
plot(dendro,horiz=T, main="dendro behav_substrate", )
plot(as.dendrogram(dendro_fine),horiz=T, main = "dendro behav_substrate_fine")
plot(as.dendrogram(dendro_phylo_best),horiz=T, main = "phylogeny")
par(mar=c(2,1,1,12))
plot(as.dendrogram(dendro_lit_behav),horiz=T, main = "literature_behav")
plot(as.dendrogram(dendro_lit_substrate),horiz=T, main = "literature_substrate")
tanglegram(dendro, dendro_fine,
common_subtrees_color_lines = TRUE, highlight_distinct_edges  = FALSE, highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
sort=T,
main_left="dendro",
main_right="dendro_fine")
tangle_phylo <- tanglegram(dendro, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
common_subtrees_color_branches= TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=8,
lwd=2,
main_left="behavior",
main_right="phylogeny",
hang=F,)
rotate_tangle <- untangle_step_rotate_1side(
dendro_phylo_best,
dendro,
L = 1.5,
direction = c("forward", "backward"),
k_seq = NULL,
dend_heights_per_k,
leaves_matching_method = c("labels", "order"))
plot(rotate_tangle)
tangle_morfo_behav <- tanglegram(dendro_morfo, dendro,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
main_left="morphology",
main_right="behavior",
hang=F,)
tangle_morfo_phylo <- tanglegram(dendro_morfo, dendro_phylo_best,
common_subtrees_color_lines = TRUE,
highlight_distinct_edges  = FALSE,
sort=T,
highlight_branches_lwd=FALSE,
margin_inner=14,
lwd=2,
main_left="morphology",
main_right="phylogeny",
hang=F,)
######################### Codendrogram Aesthetics ###########################################
op = par(bg = "white")
# vector of colors
labelColors_2 = c("#7A67EE", "#008B45", "#036564","#D46B37", "#D43B22")
labelLegend = c("air?", "probers", "leaf", "bark","ground")
# nařezat dendro do 4 gild
clusMember = cutree(dendro, 5)
# funkce pro obarvení gild
colLab <- function(n) {
if (is.leaf(n)) {
a <- attributes(n)
labCol <- labelColors_2[clusMember[which(names(clusMember) == a$label)]]
attr(n, "nodePar") <- c(a$nodePar, lab.col = labCol)
}
n
}
# dendrapply aplikace funkce pro guildy
dendro_pretty = dendrapply(dendro, colLab)
dendro_fine_pretty = dendrapply(dendro_fine, colLab)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
### kombo gildy_phylo estetika
dev.off()
set.seed(12345)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=1000)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "n",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE, inset = c(0, 0.1))
dendlist(dendro_pretty, dendro_phylo_best)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step1side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=100)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=1000)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
dendlist(dendro_pretty, dendro_phylo_best)%>%
dendextend::untangle(method="random", R=1000)%>%####### Crucial step to produce human readable codendrograms! Use lower R on slower machines.
dendextend::untangle(method="step2side")%>%############## For troubleshooting, use "%>% entanglement()" to assess entanglement (lower is better)
tanglegram(common_subtrees_color_lines = TRUE, # Do NOT include "sort=T" argument if using untangle before (sort overrides it)
highlight_distinct_edges  = FALSE,
highlight_branches_lwd=FALSE,
margin_inner=10,
margin_outer=7,
lwd=3,
main_left="behavior",
main_right="phylogeny",
hang=F)
### plot gildy barvy legenda
par(mar=c(5,1,1,12))
plot(dendro_pretty, main = "Foraging guilds", type = "rectangle", horiz = T)
legend("topleft",
legend = labelLegend,
col = labelColors_2,
pch = c(20,20,20,20), bty = "y",  pt.cex = 1.5, cex = 0.8 ,
text.col = "black", horiz = FALSE,
title="Guilds",
inset = c(0, 0.1))
fviz_dend(dendro, cex = 0.8, lwd = 0.8, k = 6,
rect = TRUE,
k_colors = "jco",
rect_border = "jco",
rect_fill = TRUE,
type = "phylogenic",
repel=T)
fviz_dend(dendro, cex = 0.8, lwd = 0.8, k = 6,
rect = TRUE,
k_colors = "jco",
rect_border = "jco",
rect_fill = TRUE,
ggtheme = theme_gray())
grid.arrange(specialization_23, specialization_24, ncol=1, nrow=2)
grid.arrange(specialization_23, specialization_24, ncol=2, nrow=1)
summary(lm(BaS ~ BaM, index_subset_all))
View(dist_mat)
?vegdis
?vegdist
library(vegan)
?vegdist
